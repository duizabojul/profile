# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes


# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  autoenv
  autojump
  aws
  colored-man-pages
  docker
  encode64
  extract
  gh
  git
  gitignore
  helm
  httpie
  kubectl
  kubectx
  macos
  minikube
  vscode
  you-should-use
  zsh-autosuggestions
  zsh-history-substring-search
  zsh-syntax-highlighting
)

# Docker completion
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes

source $ZSH/oh-my-zsh.sh
ZSH_THEME="powerlevel10k/powerlevel10k"
# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.


export PATH=$PATH:$HOME/.my-profile
export PATH=$PATH:$HOME/.cargo/bin

export PATH=/opt/homebrew/bin/:$PATH
export PATH=/opt/homebrew/sbin:$PATH
export PATH=/opt/homebrew/opt/libpq/bin:$PATH

# History substring
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# Autoenv
AUTOENV_ENABLE_LEAVE="true"
AUTOENV_ASSUME_YES="true"
source $(brew --prefix autoenv)/activate.sh

# config files
alias zshrc="code $HOME/.zshrc"
alias kubeconfig="code $HOME/.kube/config"
alias gitconfig="code $HOME/.gitconfig"

# misc aliases
alias f="open ."
alias pn="pnpm"
function cs () {
    cd $1
    ls
}
alias cd="cs"
alias tf="terraform"
alias aa='airnity a login'

#Git alias
alias zshrc="code ~/.zshrc"
alias ggr="git graph"
alias ggra="git graph --all"
alias gua="git unadd"
alias gcm="git commit -m"
alias yolo='git commit -m "$(curl -s http://whatthecommit.com/index.txt)"'
alias gcf='git commit --amend --reuse-message=HEAD'
replace-tag() {
  git tag -d $1 && git push --delete origin $1 && git tag $1 && git push origin $1
}
alias forcepush="git commit --amend --reuse-message=HEAD && git push --force-with-lease"
alias oc="aicommits"
alias ghview="gh repo view --web"

# Alias for aliases
alias al="alias | grep"
alias alf="alias | fzf"

# Kubernetes alias
alias k9s="k9s -A"
alias k=kubectl
alias kb=kubectl
alias kc=kubectx
alias kcuc="kubectl config use-context"
kcx () {
  kubectl config set-context --current --namespace $(kubectl get ns --no-headers | fzf | awk '{printf $1}')
}
alias kcn="kubectl config set-context --current --namespace"
alias wkb="watch kubectl"
alias kdebug="kubectl run -i --tty --rm debug --image=024454689942.dkr.ecr.eu-west-3.amazonaws.com/airnity-utils:edge --restart=Never -- bash && kubectl delete pod debug"
export KUBECONFIG=$(ls ~/.kube | grep conf | awk -v d="$HOME/.kube/" '{ printf "%s%s:", d,$0}')

# docker compose aliases
alias dc="docker compose"
alias dev="docker compose -f dev.compose.yaml"
alias devr="dev run --rm --remove-orphans --service-ports"
alias devd="dev down --remove-orphans"

# Kubernetes plugins
export PATH="${PATH}:${HOME}/.krew/bin"


# GPG
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent


# Local bin dir
export PATH=$PATH:$HOME/.local/bin

#PAGER
export PAGER="bat -p"

# Config
export XDG_CONFIG_HOME=$HOME/.config

# Script
export PATH=$PATH:$HOME/.my-profile/scripts

# Docker
alias ldk="lazydocker"

# ifconfig.co
alias addr="http -b https://ifconfig.co/json"

# go
export PATH="$PATH:$HOME/go/bin"

# Airnity cli
source <(airnity completion zsh); compdef _airnity airnity
alias rnt='airnity'

# Google cloud
source "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"

# Docker
export PATH=$PATH:$HOME/.docker/bin

export NVM_DIR="$HOME/.nvm"
    [ -s "$HOMEBREW_PREFIX/opt/nvm/nvm.sh" ] && \. "$HOMEBREW_PREFIX/opt/nvm/nvm.sh" # This loads nvm
    [ -s "$HOMEBREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" ] && \. "$HOMEBREW_PREFIX/opt/nvm/etc/bash_completion.d/nvm" # This loads nvm bash_completion


source $HOMEBREW_PREFIX/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# To customize prompt, run `p10k configure` or edit ~/.my-profile/config/zsh/p10k.zsh.
[[ ! -f ~/.my-profile/config/zsh/p10k.zsh ]] || source ~/.my-profile/config/zsh/p10k.zsh

export PATH=/opt/homebrew/opt/python@3.12/libexec/bin:$PATH
export CLOUDSDK_PYTHON_SITEPACKAGES=1


# Virtualenv
export WORKON_HOME=$HOME/.virtualenvs
export PIP_REQUIRE_VIRTUALENV=true
export VIRTUAL_ENV_DISABLE_PROMPT=1
export PIP_DOWNLOAD_CACHE=$HOME/.pip/cache
export VIRTUALENVWRAPPER_PYTHON='/opt/homebrew/bin/python3'
export VIRTUALENVWRAPPER_VIRTUALENV='/opt/homebrew/bin/virtualenv'

# Virtualenvwrapper
source /opt/homebrew/bin/virtualenvwrapper_lazy.sh

export YSU_MESSAGE_POSITION="after"
export DEV_DOMAIN=jduizabo.u.airnity.private


alias gofiles='(find . -name "*.go" -type f -print0 | while IFS= read -r -d "" file; do
    echo "=== File: $file ===";
    cat "$file";
    echo "";
done) | tee >(pbcopy)'
